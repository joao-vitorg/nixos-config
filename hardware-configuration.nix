# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b6051b09-5806-4160-833b-f96cd87d8379";
      fsType = "btrfs";
      options = [ "compress=zstd" "noatime"  ];
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/B58B-3CCD";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" "nofail" ];
    };

  fileSystems."/media/hdd" =
    { device = "/dev/disk/by-uuid/561267c3-8e79-410e-a6f5-cdd6b01b1d84";
      fsType = "btrfs";
      options = [ "compress=zstd" "noatime" "nofail" ];
    };

  fileSystems."/media/windows" =
    { device = "/dev/disk/by-uuid/42D0A323D0A31BE3";
      fsType = "ntfs";
      options = [ "nofail" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
